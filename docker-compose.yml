version: '3'
services:
  gateway:
    build: ./api-gateway
    restart: always
    hostname: api-gateway
    env_file:
      - ./api-gateway/.env
    environment:
      USER_SERVICE_HOST: user-service
    ports:
      - "8000:3000"
    networks:
      - backend
    depends_on:
      - user-service
      - admin-service
      - post-service
  user-service:
    build: ./user-service
    restart: always
    hostname: user-service
    env_file:
      - ./user-service/.env
    environment:
      SECRET: ${SECRET:-MyRandomSecret}
      DB_HOST: postgres
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-user-service}
      PORT: ${PORT:-3501}
      TCP: ${PORT:-3500}
      USER_SERVICE_HOST: user-service
    networks:
      - backend
    links:
      - postgres
    depends_on:
      - postgres
  admin-service:
    build: ./admin-service
    restart: always
    hostname: admin-service
    env_file:
      - ./admin-service/.env
    environment:
      DB_HOST: postgres
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-admin-service}
      PORT: ${PORT:-3502}
      TCP: ${PORT:-3003}
      ADMIN_SERVICE_HOST: admin-service
    networks:
      - backend
    links:
      - postgres
    depends_on:
      - postgres
  post-service:
    build: ./post-service
    restart: always
    hostname: post-service
    env_file:
      - ./post-service/.env
    environment:
      DB_HOST: postgres
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-post-service}
      PORT: ${PORT:-3503}
      TCP: ${PORT:-3001}
      POST_SERVICE_HOST: post-service
    networks:
      - backend
    links:
      - postgres
    depends_on:
      - postgres
  postgres:
    container_name: postgres_container_kwt
    image: postgres
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres: {}